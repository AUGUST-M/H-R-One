//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5485
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace HROne.Reports.Payroll.DataSet {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("Payroll_KTPFundStatement")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class Payroll_KTPFundStatement : global::System.Data.DataSet {
        
        private ORSOPlanDataTable tableORSOPlan;
        
        private ExistingMemberDataTable tableExistingMember;
        
        private global::System.Data.DataRelation relationORSOPlan_ExistingMember;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Payroll_KTPFundStatement() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected Payroll_KTPFundStatement(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["ORSOPlan"] != null)) {
                    base.Tables.Add(new ORSOPlanDataTable(ds.Tables["ORSOPlan"]));
                }
                if ((ds.Tables["ExistingMember"] != null)) {
                    base.Tables.Add(new ExistingMemberDataTable(ds.Tables["ExistingMember"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ORSOPlanDataTable ORSOPlan {
            get {
                return this.tableORSOPlan;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ExistingMemberDataTable ExistingMember {
            get {
                return this.tableExistingMember;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            Payroll_KTPFundStatement cln = ((Payroll_KTPFundStatement)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["ORSOPlan"] != null)) {
                    base.Tables.Add(new ORSOPlanDataTable(ds.Tables["ORSOPlan"]));
                }
                if ((ds.Tables["ExistingMember"] != null)) {
                    base.Tables.Add(new ExistingMemberDataTable(ds.Tables["ExistingMember"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableORSOPlan = ((ORSOPlanDataTable)(base.Tables["ORSOPlan"]));
            if ((initTable == true)) {
                if ((this.tableORSOPlan != null)) {
                    this.tableORSOPlan.InitVars();
                }
            }
            this.tableExistingMember = ((ExistingMemberDataTable)(base.Tables["ExistingMember"]));
            if ((initTable == true)) {
                if ((this.tableExistingMember != null)) {
                    this.tableExistingMember.InitVars();
                }
            }
            this.relationORSOPlan_ExistingMember = this.Relations["ORSOPlan_ExistingMember"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "Payroll_KTPFundStatement";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/Payroll_KTPFundStatement.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableORSOPlan = new ORSOPlanDataTable();
            base.Tables.Add(this.tableORSOPlan);
            this.tableExistingMember = new ExistingMemberDataTable();
            base.Tables.Add(this.tableExistingMember);
            this.relationORSOPlan_ExistingMember = new global::System.Data.DataRelation("ORSOPlan_ExistingMember", new global::System.Data.DataColumn[] {
                        this.tableORSOPlan.ORSOPlanIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableExistingMember.ORSOPlanIDColumn}, false);
            this.Relations.Add(this.relationORSOPlan_ExistingMember);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeORSOPlan() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeExistingMember() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            Payroll_KTPFundStatement ds = new Payroll_KTPFundStatement();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void ORSOPlanRowChangeEventHandler(object sender, ORSOPlanRowChangeEvent e);
        
        public delegate void ExistingMemberRowChangeEventHandler(object sender, ExistingMemberRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ORSOPlanDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnORSOPlanID;
            
            private global::System.Data.DataColumn columnORSOPlanCode;
            
            private global::System.Data.DataColumn columnORSOPlanDesc;
            
            private global::System.Data.DataColumn columnORSOPlanSchemeNo;
            
            private global::System.Data.DataColumn columnORSOPlanCompanyName;
            
            private global::System.Data.DataColumn columnORSOPlanPayCenter;
            
            private global::System.Data.DataColumn columnORSOPlanMaxEmployerVC;
            
            private global::System.Data.DataColumn columnORSOPlanMaxEmployeeVC;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ORSOPlanDataTable() {
                this.TableName = "ORSOPlan";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ORSOPlanDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ORSOPlanDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ORSOPlanIDColumn {
                get {
                    return this.columnORSOPlanID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ORSOPlanCodeColumn {
                get {
                    return this.columnORSOPlanCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ORSOPlanDescColumn {
                get {
                    return this.columnORSOPlanDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ORSOPlanSchemeNoColumn {
                get {
                    return this.columnORSOPlanSchemeNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ORSOPlanCompanyNameColumn {
                get {
                    return this.columnORSOPlanCompanyName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ORSOPlanPayCenterColumn {
                get {
                    return this.columnORSOPlanPayCenter;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ORSOPlanMaxEmployerVCColumn {
                get {
                    return this.columnORSOPlanMaxEmployerVC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ORSOPlanMaxEmployeeVCColumn {
                get {
                    return this.columnORSOPlanMaxEmployeeVC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ORSOPlanRow this[int index] {
                get {
                    return ((ORSOPlanRow)(this.Rows[index]));
                }
            }
            
            public event ORSOPlanRowChangeEventHandler ORSOPlanRowChanging;
            
            public event ORSOPlanRowChangeEventHandler ORSOPlanRowChanged;
            
            public event ORSOPlanRowChangeEventHandler ORSOPlanRowDeleting;
            
            public event ORSOPlanRowChangeEventHandler ORSOPlanRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddORSOPlanRow(ORSOPlanRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ORSOPlanRow AddORSOPlanRow(string ORSOPlanCode, string ORSOPlanDesc, string ORSOPlanSchemeNo, string ORSOPlanCompanyName, string ORSOPlanPayCenter, decimal ORSOPlanMaxEmployerVC, decimal ORSOPlanMaxEmployeeVC) {
                ORSOPlanRow rowORSOPlanRow = ((ORSOPlanRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        ORSOPlanCode,
                        ORSOPlanDesc,
                        ORSOPlanSchemeNo,
                        ORSOPlanCompanyName,
                        ORSOPlanPayCenter,
                        ORSOPlanMaxEmployerVC,
                        ORSOPlanMaxEmployeeVC};
                rowORSOPlanRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowORSOPlanRow);
                return rowORSOPlanRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ORSOPlanRow FindByORSOPlanID(int ORSOPlanID) {
                return ((ORSOPlanRow)(this.Rows.Find(new object[] {
                            ORSOPlanID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ORSOPlanDataTable cln = ((ORSOPlanDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ORSOPlanDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnORSOPlanID = base.Columns["ORSOPlanID"];
                this.columnORSOPlanCode = base.Columns["ORSOPlanCode"];
                this.columnORSOPlanDesc = base.Columns["ORSOPlanDesc"];
                this.columnORSOPlanSchemeNo = base.Columns["ORSOPlanSchemeNo"];
                this.columnORSOPlanCompanyName = base.Columns["ORSOPlanCompanyName"];
                this.columnORSOPlanPayCenter = base.Columns["ORSOPlanPayCenter"];
                this.columnORSOPlanMaxEmployerVC = base.Columns["ORSOPlanMaxEmployerVC"];
                this.columnORSOPlanMaxEmployeeVC = base.Columns["ORSOPlanMaxEmployeeVC"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnORSOPlanID = new global::System.Data.DataColumn("ORSOPlanID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnORSOPlanID);
                this.columnORSOPlanCode = new global::System.Data.DataColumn("ORSOPlanCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnORSOPlanCode);
                this.columnORSOPlanDesc = new global::System.Data.DataColumn("ORSOPlanDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnORSOPlanDesc);
                this.columnORSOPlanSchemeNo = new global::System.Data.DataColumn("ORSOPlanSchemeNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnORSOPlanSchemeNo);
                this.columnORSOPlanCompanyName = new global::System.Data.DataColumn("ORSOPlanCompanyName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnORSOPlanCompanyName);
                this.columnORSOPlanPayCenter = new global::System.Data.DataColumn("ORSOPlanPayCenter", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnORSOPlanPayCenter);
                this.columnORSOPlanMaxEmployerVC = new global::System.Data.DataColumn("ORSOPlanMaxEmployerVC", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnORSOPlanMaxEmployerVC);
                this.columnORSOPlanMaxEmployeeVC = new global::System.Data.DataColumn("ORSOPlanMaxEmployeeVC", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnORSOPlanMaxEmployeeVC);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnORSOPlanID}, true));
                this.columnORSOPlanID.AutoIncrement = true;
                this.columnORSOPlanID.AllowDBNull = false;
                this.columnORSOPlanID.ReadOnly = true;
                this.columnORSOPlanID.Unique = true;
                this.columnORSOPlanCode.MaxLength = 20;
                this.columnORSOPlanDesc.MaxLength = 100;
                this.columnORSOPlanSchemeNo.MaxLength = 100;
                this.columnORSOPlanCompanyName.MaxLength = 100;
                this.columnORSOPlanPayCenter.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ORSOPlanRow NewORSOPlanRow() {
                return ((ORSOPlanRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ORSOPlanRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ORSOPlanRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ORSOPlanRowChanged != null)) {
                    this.ORSOPlanRowChanged(this, new ORSOPlanRowChangeEvent(((ORSOPlanRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ORSOPlanRowChanging != null)) {
                    this.ORSOPlanRowChanging(this, new ORSOPlanRowChangeEvent(((ORSOPlanRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ORSOPlanRowDeleted != null)) {
                    this.ORSOPlanRowDeleted(this, new ORSOPlanRowChangeEvent(((ORSOPlanRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ORSOPlanRowDeleting != null)) {
                    this.ORSOPlanRowDeleting(this, new ORSOPlanRowChangeEvent(((ORSOPlanRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveORSOPlanRow(ORSOPlanRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Payroll_KTPFundStatement ds = new Payroll_KTPFundStatement();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ORSOPlanDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ExistingMemberDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnEmpID;
            
            private global::System.Data.DataColumn columnORSOPlanID;
            
            private global::System.Data.DataColumn columnEmpNo;
            
            private global::System.Data.DataColumn columnEmpName;
            
            private global::System.Data.DataColumn columnHKID;
            
            private global::System.Data.DataColumn columnPeriodFrom;
            
            private global::System.Data.DataColumn columnPeriodTo;
            
            private global::System.Data.DataColumn columnRelevantIncome;
            
            private global::System.Data.DataColumn columnER;
            
            private global::System.Data.DataColumn columnEE;
            
            private global::System.Data.DataColumn columnLastEmploymentDate;
            
            private global::System.Data.DataColumn columnTermCode;
            
            private global::System.Data.DataColumn columnIsLSP;
            
            private global::System.Data.DataColumn columnIsSP;
            
            private global::System.Data.DataColumn columnLSPSPAmount;
            
            private global::System.Data.DataColumn columnLSPSPAmountPaidByER;
            
            private global::System.Data.DataColumn columnMpfMCER;
            
            private global::System.Data.DataColumn columnMpfVCER;
            
            private global::System.Data.DataColumn columnMpfMCEE;
            
            private global::System.Data.DataColumn columnMpfVCEE;
            
            private global::System.Data.DataColumn columnEmpOrsoStatus;
            
            private global::System.Data.DataColumn columnMemberID;
            
            private global::System.Data.DataColumn columnEmpSex;
            
            private global::System.Data.DataColumn columnEmpDOB;
            
            private global::System.Data.DataColumn columnEmpDateJoin;
            
            private global::System.Data.DataColumn columnOrsoEffDate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ExistingMemberDataTable() {
                this.TableName = "ExistingMember";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ExistingMemberDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ExistingMemberDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmpIDColumn {
                get {
                    return this.columnEmpID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ORSOPlanIDColumn {
                get {
                    return this.columnORSOPlanID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmpNoColumn {
                get {
                    return this.columnEmpNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmpNameColumn {
                get {
                    return this.columnEmpName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HKIDColumn {
                get {
                    return this.columnHKID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PeriodFromColumn {
                get {
                    return this.columnPeriodFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PeriodToColumn {
                get {
                    return this.columnPeriodTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RelevantIncomeColumn {
                get {
                    return this.columnRelevantIncome;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ERColumn {
                get {
                    return this.columnER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EEColumn {
                get {
                    return this.columnEE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LastEmploymentDateColumn {
                get {
                    return this.columnLastEmploymentDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TermCodeColumn {
                get {
                    return this.columnTermCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsLSPColumn {
                get {
                    return this.columnIsLSP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsSPColumn {
                get {
                    return this.columnIsSP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LSPSPAmountColumn {
                get {
                    return this.columnLSPSPAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LSPSPAmountPaidByERColumn {
                get {
                    return this.columnLSPSPAmountPaidByER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MpfMCERColumn {
                get {
                    return this.columnMpfMCER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MpfVCERColumn {
                get {
                    return this.columnMpfVCER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MpfMCEEColumn {
                get {
                    return this.columnMpfMCEE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MpfVCEEColumn {
                get {
                    return this.columnMpfVCEE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmpOrsoStatusColumn {
                get {
                    return this.columnEmpOrsoStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MemberIDColumn {
                get {
                    return this.columnMemberID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmpSexColumn {
                get {
                    return this.columnEmpSex;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmpDOBColumn {
                get {
                    return this.columnEmpDOB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmpDateJoinColumn {
                get {
                    return this.columnEmpDateJoin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OrsoEffDateColumn {
                get {
                    return this.columnOrsoEffDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ExistingMemberRow this[int index] {
                get {
                    return ((ExistingMemberRow)(this.Rows[index]));
                }
            }
            
            public event ExistingMemberRowChangeEventHandler ExistingMemberRowChanging;
            
            public event ExistingMemberRowChangeEventHandler ExistingMemberRowChanged;
            
            public event ExistingMemberRowChangeEventHandler ExistingMemberRowDeleting;
            
            public event ExistingMemberRowChangeEventHandler ExistingMemberRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddExistingMemberRow(ExistingMemberRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ExistingMemberRow AddExistingMemberRow(
                        int EmpID, 
                        ORSOPlanRow parentORSOPlanRowByORSOPlan_ExistingMember, 
                        string EmpNo, 
                        string EmpName, 
                        string HKID, 
                        System.DateTime PeriodFrom, 
                        System.DateTime PeriodTo, 
                        double RelevantIncome, 
                        double ER, 
                        double EE, 
                        System.DateTime LastEmploymentDate, 
                        string TermCode, 
                        bool IsLSP, 
                        bool IsSP, 
                        double LSPSPAmount, 
                        double LSPSPAmountPaidByER, 
                        double MpfMCER, 
                        double MpfVCER, 
                        double MpfMCEE, 
                        double MpfVCEE, 
                        string EmpOrsoStatus, 
                        string MemberID, 
                        string EmpSex, 
                        System.DateTime EmpDOB, 
                        System.DateTime EmpDateJoin, 
                        System.DateTime OrsoEffDate) {
                ExistingMemberRow rowExistingMemberRow = ((ExistingMemberRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        EmpID,
                        null,
                        EmpNo,
                        EmpName,
                        HKID,
                        PeriodFrom,
                        PeriodTo,
                        RelevantIncome,
                        ER,
                        EE,
                        LastEmploymentDate,
                        TermCode,
                        IsLSP,
                        IsSP,
                        LSPSPAmount,
                        LSPSPAmountPaidByER,
                        MpfMCER,
                        MpfVCER,
                        MpfMCEE,
                        MpfVCEE,
                        EmpOrsoStatus,
                        MemberID,
                        EmpSex,
                        EmpDOB,
                        EmpDateJoin,
                        OrsoEffDate};
                if ((parentORSOPlanRowByORSOPlan_ExistingMember != null)) {
                    columnValuesArray[1] = parentORSOPlanRowByORSOPlan_ExistingMember[0];
                }
                rowExistingMemberRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowExistingMemberRow);
                return rowExistingMemberRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ExistingMemberDataTable cln = ((ExistingMemberDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ExistingMemberDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnEmpID = base.Columns["EmpID"];
                this.columnORSOPlanID = base.Columns["ORSOPlanID"];
                this.columnEmpNo = base.Columns["EmpNo"];
                this.columnEmpName = base.Columns["EmpName"];
                this.columnHKID = base.Columns["HKID"];
                this.columnPeriodFrom = base.Columns["PeriodFrom"];
                this.columnPeriodTo = base.Columns["PeriodTo"];
                this.columnRelevantIncome = base.Columns["RelevantIncome"];
                this.columnER = base.Columns["ER"];
                this.columnEE = base.Columns["EE"];
                this.columnLastEmploymentDate = base.Columns["LastEmploymentDate"];
                this.columnTermCode = base.Columns["TermCode"];
                this.columnIsLSP = base.Columns["IsLSP"];
                this.columnIsSP = base.Columns["IsSP"];
                this.columnLSPSPAmount = base.Columns["LSPSPAmount"];
                this.columnLSPSPAmountPaidByER = base.Columns["LSPSPAmountPaidByER"];
                this.columnMpfMCER = base.Columns["MpfMCER"];
                this.columnMpfVCER = base.Columns["MpfVCER"];
                this.columnMpfMCEE = base.Columns["MpfMCEE"];
                this.columnMpfVCEE = base.Columns["MpfVCEE"];
                this.columnEmpOrsoStatus = base.Columns["EmpOrsoStatus"];
                this.columnMemberID = base.Columns["MemberID"];
                this.columnEmpSex = base.Columns["EmpSex"];
                this.columnEmpDOB = base.Columns["EmpDOB"];
                this.columnEmpDateJoin = base.Columns["EmpDateJoin"];
                this.columnOrsoEffDate = base.Columns["OrsoEffDate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnEmpID = new global::System.Data.DataColumn("EmpID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpID);
                this.columnORSOPlanID = new global::System.Data.DataColumn("ORSOPlanID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnORSOPlanID);
                this.columnEmpNo = new global::System.Data.DataColumn("EmpNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpNo);
                this.columnEmpName = new global::System.Data.DataColumn("EmpName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpName);
                this.columnHKID = new global::System.Data.DataColumn("HKID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHKID);
                this.columnPeriodFrom = new global::System.Data.DataColumn("PeriodFrom", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPeriodFrom);
                this.columnPeriodTo = new global::System.Data.DataColumn("PeriodTo", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPeriodTo);
                this.columnRelevantIncome = new global::System.Data.DataColumn("RelevantIncome", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRelevantIncome);
                this.columnER = new global::System.Data.DataColumn("ER", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnER);
                this.columnEE = new global::System.Data.DataColumn("EE", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEE);
                this.columnLastEmploymentDate = new global::System.Data.DataColumn("LastEmploymentDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastEmploymentDate);
                this.columnTermCode = new global::System.Data.DataColumn("TermCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTermCode);
                this.columnIsLSP = new global::System.Data.DataColumn("IsLSP", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsLSP);
                this.columnIsSP = new global::System.Data.DataColumn("IsSP", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsSP);
                this.columnLSPSPAmount = new global::System.Data.DataColumn("LSPSPAmount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLSPSPAmount);
                this.columnLSPSPAmountPaidByER = new global::System.Data.DataColumn("LSPSPAmountPaidByER", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLSPSPAmountPaidByER);
                this.columnMpfMCER = new global::System.Data.DataColumn("MpfMCER", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMpfMCER);
                this.columnMpfVCER = new global::System.Data.DataColumn("MpfVCER", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMpfVCER);
                this.columnMpfMCEE = new global::System.Data.DataColumn("MpfMCEE", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMpfMCEE);
                this.columnMpfVCEE = new global::System.Data.DataColumn("MpfVCEE", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMpfVCEE);
                this.columnEmpOrsoStatus = new global::System.Data.DataColumn("EmpOrsoStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpOrsoStatus);
                this.columnMemberID = new global::System.Data.DataColumn("MemberID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMemberID);
                this.columnEmpSex = new global::System.Data.DataColumn("EmpSex", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpSex);
                this.columnEmpDOB = new global::System.Data.DataColumn("EmpDOB", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpDOB);
                this.columnEmpDateJoin = new global::System.Data.DataColumn("EmpDateJoin", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpDateJoin);
                this.columnOrsoEffDate = new global::System.Data.DataColumn("OrsoEffDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrsoEffDate);
                this.columnORSOPlanID.Caption = "MPFPlanID";
                this.columnER.Caption = "MCER";
                this.columnEE.Caption = "MCEE";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ExistingMemberRow NewExistingMemberRow() {
                return ((ExistingMemberRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ExistingMemberRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ExistingMemberRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ExistingMemberRowChanged != null)) {
                    this.ExistingMemberRowChanged(this, new ExistingMemberRowChangeEvent(((ExistingMemberRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ExistingMemberRowChanging != null)) {
                    this.ExistingMemberRowChanging(this, new ExistingMemberRowChangeEvent(((ExistingMemberRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ExistingMemberRowDeleted != null)) {
                    this.ExistingMemberRowDeleted(this, new ExistingMemberRowChangeEvent(((ExistingMemberRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ExistingMemberRowDeleting != null)) {
                    this.ExistingMemberRowDeleting(this, new ExistingMemberRowChangeEvent(((ExistingMemberRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveExistingMemberRow(ExistingMemberRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Payroll_KTPFundStatement ds = new Payroll_KTPFundStatement();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ExistingMemberDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ORSOPlanRow : global::System.Data.DataRow {
            
            private ORSOPlanDataTable tableORSOPlan;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ORSOPlanRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableORSOPlan = ((ORSOPlanDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ORSOPlanID {
                get {
                    return ((int)(this[this.tableORSOPlan.ORSOPlanIDColumn]));
                }
                set {
                    this[this.tableORSOPlan.ORSOPlanIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ORSOPlanCode {
                get {
                    try {
                        return ((string)(this[this.tableORSOPlan.ORSOPlanCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ORSOPlanCode\' in table \'ORSOPlan\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableORSOPlan.ORSOPlanCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ORSOPlanDesc {
                get {
                    try {
                        return ((string)(this[this.tableORSOPlan.ORSOPlanDescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ORSOPlanDesc\' in table \'ORSOPlan\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableORSOPlan.ORSOPlanDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ORSOPlanSchemeNo {
                get {
                    try {
                        return ((string)(this[this.tableORSOPlan.ORSOPlanSchemeNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ORSOPlanSchemeNo\' in table \'ORSOPlan\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableORSOPlan.ORSOPlanSchemeNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ORSOPlanCompanyName {
                get {
                    try {
                        return ((string)(this[this.tableORSOPlan.ORSOPlanCompanyNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ORSOPlanCompanyName\' in table \'ORSOPlan\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableORSOPlan.ORSOPlanCompanyNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ORSOPlanPayCenter {
                get {
                    try {
                        return ((string)(this[this.tableORSOPlan.ORSOPlanPayCenterColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ORSOPlanPayCenter\' in table \'ORSOPlan\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableORSOPlan.ORSOPlanPayCenterColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ORSOPlanMaxEmployerVC {
                get {
                    try {
                        return ((decimal)(this[this.tableORSOPlan.ORSOPlanMaxEmployerVCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ORSOPlanMaxEmployerVC\' in table \'ORSOPlan\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableORSOPlan.ORSOPlanMaxEmployerVCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ORSOPlanMaxEmployeeVC {
                get {
                    try {
                        return ((decimal)(this[this.tableORSOPlan.ORSOPlanMaxEmployeeVCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ORSOPlanMaxEmployeeVC\' in table \'ORSOPlan\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableORSOPlan.ORSOPlanMaxEmployeeVCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsORSOPlanCodeNull() {
                return this.IsNull(this.tableORSOPlan.ORSOPlanCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetORSOPlanCodeNull() {
                this[this.tableORSOPlan.ORSOPlanCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsORSOPlanDescNull() {
                return this.IsNull(this.tableORSOPlan.ORSOPlanDescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetORSOPlanDescNull() {
                this[this.tableORSOPlan.ORSOPlanDescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsORSOPlanSchemeNoNull() {
                return this.IsNull(this.tableORSOPlan.ORSOPlanSchemeNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetORSOPlanSchemeNoNull() {
                this[this.tableORSOPlan.ORSOPlanSchemeNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsORSOPlanCompanyNameNull() {
                return this.IsNull(this.tableORSOPlan.ORSOPlanCompanyNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetORSOPlanCompanyNameNull() {
                this[this.tableORSOPlan.ORSOPlanCompanyNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsORSOPlanPayCenterNull() {
                return this.IsNull(this.tableORSOPlan.ORSOPlanPayCenterColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetORSOPlanPayCenterNull() {
                this[this.tableORSOPlan.ORSOPlanPayCenterColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsORSOPlanMaxEmployerVCNull() {
                return this.IsNull(this.tableORSOPlan.ORSOPlanMaxEmployerVCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetORSOPlanMaxEmployerVCNull() {
                this[this.tableORSOPlan.ORSOPlanMaxEmployerVCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsORSOPlanMaxEmployeeVCNull() {
                return this.IsNull(this.tableORSOPlan.ORSOPlanMaxEmployeeVCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetORSOPlanMaxEmployeeVCNull() {
                this[this.tableORSOPlan.ORSOPlanMaxEmployeeVCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ExistingMemberRow[] GetExistingMemberRows() {
                if ((this.Table.ChildRelations["ORSOPlan_ExistingMember"] == null)) {
                    return new ExistingMemberRow[0];
                }
                else {
                    return ((ExistingMemberRow[])(base.GetChildRows(this.Table.ChildRelations["ORSOPlan_ExistingMember"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ExistingMemberRow : global::System.Data.DataRow {
            
            private ExistingMemberDataTable tableExistingMember;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ExistingMemberRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableExistingMember = ((ExistingMemberDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EmpID {
                get {
                    try {
                        return ((int)(this[this.tableExistingMember.EmpIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmpID\' in table \'ExistingMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExistingMember.EmpIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ORSOPlanID {
                get {
                    try {
                        return ((int)(this[this.tableExistingMember.ORSOPlanIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ORSOPlanID\' in table \'ExistingMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExistingMember.ORSOPlanIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EmpNo {
                get {
                    try {
                        return ((string)(this[this.tableExistingMember.EmpNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmpNo\' in table \'ExistingMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExistingMember.EmpNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EmpName {
                get {
                    try {
                        return ((string)(this[this.tableExistingMember.EmpNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmpName\' in table \'ExistingMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExistingMember.EmpNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HKID {
                get {
                    try {
                        return ((string)(this[this.tableExistingMember.HKIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HKID\' in table \'ExistingMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExistingMember.HKIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PeriodFrom {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableExistingMember.PeriodFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PeriodFrom\' in table \'ExistingMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExistingMember.PeriodFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PeriodTo {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableExistingMember.PeriodToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PeriodTo\' in table \'ExistingMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExistingMember.PeriodToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double RelevantIncome {
                get {
                    try {
                        return ((double)(this[this.tableExistingMember.RelevantIncomeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RelevantIncome\' in table \'ExistingMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExistingMember.RelevantIncomeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double ER {
                get {
                    try {
                        return ((double)(this[this.tableExistingMember.ERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ER\' in table \'ExistingMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExistingMember.ERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double EE {
                get {
                    try {
                        return ((double)(this[this.tableExistingMember.EEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EE\' in table \'ExistingMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExistingMember.EEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime LastEmploymentDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableExistingMember.LastEmploymentDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastEmploymentDate\' in table \'ExistingMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExistingMember.LastEmploymentDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TermCode {
                get {
                    try {
                        return ((string)(this[this.tableExistingMember.TermCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TermCode\' in table \'ExistingMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExistingMember.TermCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLSP {
                get {
                    try {
                        return ((bool)(this[this.tableExistingMember.IsLSPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsLSP\' in table \'ExistingMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExistingMember.IsLSPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSP {
                get {
                    try {
                        return ((bool)(this[this.tableExistingMember.IsSPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsSP\' in table \'ExistingMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExistingMember.IsSPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double LSPSPAmount {
                get {
                    try {
                        return ((double)(this[this.tableExistingMember.LSPSPAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LSPSPAmount\' in table \'ExistingMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExistingMember.LSPSPAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double LSPSPAmountPaidByER {
                get {
                    try {
                        return ((double)(this[this.tableExistingMember.LSPSPAmountPaidByERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LSPSPAmountPaidByER\' in table \'ExistingMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExistingMember.LSPSPAmountPaidByERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double MpfMCER {
                get {
                    try {
                        return ((double)(this[this.tableExistingMember.MpfMCERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MpfMCER\' in table \'ExistingMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExistingMember.MpfMCERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double MpfVCER {
                get {
                    try {
                        return ((double)(this[this.tableExistingMember.MpfVCERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MpfVCER\' in table \'ExistingMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExistingMember.MpfVCERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double MpfMCEE {
                get {
                    try {
                        return ((double)(this[this.tableExistingMember.MpfMCEEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MpfMCEE\' in table \'ExistingMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExistingMember.MpfMCEEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double MpfVCEE {
                get {
                    try {
                        return ((double)(this[this.tableExistingMember.MpfVCEEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MpfVCEE\' in table \'ExistingMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExistingMember.MpfVCEEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EmpOrsoStatus {
                get {
                    try {
                        return ((string)(this[this.tableExistingMember.EmpOrsoStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmpOrsoStatus\' in table \'ExistingMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExistingMember.EmpOrsoStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MemberID {
                get {
                    try {
                        return ((string)(this[this.tableExistingMember.MemberIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MemberID\' in table \'ExistingMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExistingMember.MemberIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EmpSex {
                get {
                    try {
                        return ((string)(this[this.tableExistingMember.EmpSexColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmpSex\' in table \'ExistingMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExistingMember.EmpSexColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime EmpDOB {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableExistingMember.EmpDOBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmpDOB\' in table \'ExistingMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExistingMember.EmpDOBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime EmpDateJoin {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableExistingMember.EmpDateJoinColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmpDateJoin\' in table \'ExistingMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExistingMember.EmpDateJoinColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime OrsoEffDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableExistingMember.OrsoEffDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OrsoEffDate\' in table \'ExistingMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExistingMember.OrsoEffDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ORSOPlanRow ORSOPlanRow {
                get {
                    return ((ORSOPlanRow)(this.GetParentRow(this.Table.ParentRelations["ORSOPlan_ExistingMember"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["ORSOPlan_ExistingMember"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmpIDNull() {
                return this.IsNull(this.tableExistingMember.EmpIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmpIDNull() {
                this[this.tableExistingMember.EmpIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsORSOPlanIDNull() {
                return this.IsNull(this.tableExistingMember.ORSOPlanIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetORSOPlanIDNull() {
                this[this.tableExistingMember.ORSOPlanIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmpNoNull() {
                return this.IsNull(this.tableExistingMember.EmpNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmpNoNull() {
                this[this.tableExistingMember.EmpNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmpNameNull() {
                return this.IsNull(this.tableExistingMember.EmpNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmpNameNull() {
                this[this.tableExistingMember.EmpNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHKIDNull() {
                return this.IsNull(this.tableExistingMember.HKIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHKIDNull() {
                this[this.tableExistingMember.HKIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPeriodFromNull() {
                return this.IsNull(this.tableExistingMember.PeriodFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPeriodFromNull() {
                this[this.tableExistingMember.PeriodFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPeriodToNull() {
                return this.IsNull(this.tableExistingMember.PeriodToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPeriodToNull() {
                this[this.tableExistingMember.PeriodToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRelevantIncomeNull() {
                return this.IsNull(this.tableExistingMember.RelevantIncomeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRelevantIncomeNull() {
                this[this.tableExistingMember.RelevantIncomeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsERNull() {
                return this.IsNull(this.tableExistingMember.ERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetERNull() {
                this[this.tableExistingMember.ERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEENull() {
                return this.IsNull(this.tableExistingMember.EEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEENull() {
                this[this.tableExistingMember.EEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLastEmploymentDateNull() {
                return this.IsNull(this.tableExistingMember.LastEmploymentDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLastEmploymentDateNull() {
                this[this.tableExistingMember.LastEmploymentDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTermCodeNull() {
                return this.IsNull(this.tableExistingMember.TermCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTermCodeNull() {
                this[this.tableExistingMember.TermCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsLSPNull() {
                return this.IsNull(this.tableExistingMember.IsLSPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsLSPNull() {
                this[this.tableExistingMember.IsLSPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsSPNull() {
                return this.IsNull(this.tableExistingMember.IsSPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsSPNull() {
                this[this.tableExistingMember.IsSPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLSPSPAmountNull() {
                return this.IsNull(this.tableExistingMember.LSPSPAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLSPSPAmountNull() {
                this[this.tableExistingMember.LSPSPAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLSPSPAmountPaidByERNull() {
                return this.IsNull(this.tableExistingMember.LSPSPAmountPaidByERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLSPSPAmountPaidByERNull() {
                this[this.tableExistingMember.LSPSPAmountPaidByERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMpfMCERNull() {
                return this.IsNull(this.tableExistingMember.MpfMCERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMpfMCERNull() {
                this[this.tableExistingMember.MpfMCERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMpfVCERNull() {
                return this.IsNull(this.tableExistingMember.MpfVCERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMpfVCERNull() {
                this[this.tableExistingMember.MpfVCERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMpfMCEENull() {
                return this.IsNull(this.tableExistingMember.MpfMCEEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMpfMCEENull() {
                this[this.tableExistingMember.MpfMCEEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMpfVCEENull() {
                return this.IsNull(this.tableExistingMember.MpfVCEEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMpfVCEENull() {
                this[this.tableExistingMember.MpfVCEEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmpOrsoStatusNull() {
                return this.IsNull(this.tableExistingMember.EmpOrsoStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmpOrsoStatusNull() {
                this[this.tableExistingMember.EmpOrsoStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMemberIDNull() {
                return this.IsNull(this.tableExistingMember.MemberIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMemberIDNull() {
                this[this.tableExistingMember.MemberIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmpSexNull() {
                return this.IsNull(this.tableExistingMember.EmpSexColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmpSexNull() {
                this[this.tableExistingMember.EmpSexColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmpDOBNull() {
                return this.IsNull(this.tableExistingMember.EmpDOBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmpDOBNull() {
                this[this.tableExistingMember.EmpDOBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmpDateJoinNull() {
                return this.IsNull(this.tableExistingMember.EmpDateJoinColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmpDateJoinNull() {
                this[this.tableExistingMember.EmpDateJoinColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOrsoEffDateNull() {
                return this.IsNull(this.tableExistingMember.OrsoEffDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOrsoEffDateNull() {
                this[this.tableExistingMember.OrsoEffDateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ORSOPlanRowChangeEvent : global::System.EventArgs {
            
            private ORSOPlanRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ORSOPlanRowChangeEvent(ORSOPlanRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ORSOPlanRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ExistingMemberRowChangeEvent : global::System.EventArgs {
            
            private ExistingMemberRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ExistingMemberRowChangeEvent(ExistingMemberRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ExistingMemberRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591