//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5485
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace HROne.Reports.Payroll.DataSet {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("Payroll_LongServicePaymentSeverancePayment_List")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class Payroll_LongServicePaymentSeverancePayment_List : global::System.Data.DataSet {
        
        private employeedetailDataTable tableemployeedetail;
        
        private LongServicePaymentSeverancePaymentDataTable tableLongServicePaymentSeverancePayment;
        
        private global::System.Data.DataRelation relationemployeedetail_LongServicePaymentSeverancePayment;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Payroll_LongServicePaymentSeverancePayment_List() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected Payroll_LongServicePaymentSeverancePayment_List(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["employeedetail"] != null)) {
                    base.Tables.Add(new employeedetailDataTable(ds.Tables["employeedetail"]));
                }
                if ((ds.Tables["LongServicePaymentSeverancePayment"] != null)) {
                    base.Tables.Add(new LongServicePaymentSeverancePaymentDataTable(ds.Tables["LongServicePaymentSeverancePayment"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public employeedetailDataTable employeedetail {
            get {
                return this.tableemployeedetail;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LongServicePaymentSeverancePaymentDataTable LongServicePaymentSeverancePayment {
            get {
                return this.tableLongServicePaymentSeverancePayment;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            Payroll_LongServicePaymentSeverancePayment_List cln = ((Payroll_LongServicePaymentSeverancePayment_List)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["employeedetail"] != null)) {
                    base.Tables.Add(new employeedetailDataTable(ds.Tables["employeedetail"]));
                }
                if ((ds.Tables["LongServicePaymentSeverancePayment"] != null)) {
                    base.Tables.Add(new LongServicePaymentSeverancePaymentDataTable(ds.Tables["LongServicePaymentSeverancePayment"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableemployeedetail = ((employeedetailDataTable)(base.Tables["employeedetail"]));
            if ((initTable == true)) {
                if ((this.tableemployeedetail != null)) {
                    this.tableemployeedetail.InitVars();
                }
            }
            this.tableLongServicePaymentSeverancePayment = ((LongServicePaymentSeverancePaymentDataTable)(base.Tables["LongServicePaymentSeverancePayment"]));
            if ((initTable == true)) {
                if ((this.tableLongServicePaymentSeverancePayment != null)) {
                    this.tableLongServicePaymentSeverancePayment.InitVars();
                }
            }
            this.relationemployeedetail_LongServicePaymentSeverancePayment = this.Relations["employeedetail_LongServicePaymentSeverancePayment"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "Payroll_LongServicePaymentSeverancePayment_List";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/Payroll_LongServicePaymentSeverancePayment_List.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableemployeedetail = new employeedetailDataTable();
            base.Tables.Add(this.tableemployeedetail);
            this.tableLongServicePaymentSeverancePayment = new LongServicePaymentSeverancePaymentDataTable();
            base.Tables.Add(this.tableLongServicePaymentSeverancePayment);
            this.relationemployeedetail_LongServicePaymentSeverancePayment = new global::System.Data.DataRelation("employeedetail_LongServicePaymentSeverancePayment", new global::System.Data.DataColumn[] {
                        this.tableemployeedetail.EmpIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableLongServicePaymentSeverancePayment.EmpIDColumn}, false);
            this.Relations.Add(this.relationemployeedetail_LongServicePaymentSeverancePayment);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeemployeedetail() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLongServicePaymentSeverancePayment() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            Payroll_LongServicePaymentSeverancePayment_List ds = new Payroll_LongServicePaymentSeverancePayment_List();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void employeedetailRowChangeEventHandler(object sender, employeedetailRowChangeEvent e);
        
        public delegate void LongServicePaymentSeverancePaymentRowChangeEventHandler(object sender, LongServicePaymentSeverancePaymentRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class employeedetailDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnEmpID;
            
            private global::System.Data.DataColumn columnEmpNo;
            
            private global::System.Data.DataColumn columnEmpStatus;
            
            private global::System.Data.DataColumn columnEmpEngSurname;
            
            private global::System.Data.DataColumn columnEmpEngOtherName;
            
            private global::System.Data.DataColumn columnEmpEngFullName;
            
            private global::System.Data.DataColumn columnEmpChiFullName;
            
            private global::System.Data.DataColumn columnEmpAlias;
            
            private global::System.Data.DataColumn columnEmpHKID;
            
            private global::System.Data.DataColumn columnEmpGender;
            
            private global::System.Data.DataColumn columnEmpMaritalStatus;
            
            private global::System.Data.DataColumn columnEmpDateOfBirth;
            
            private global::System.Data.DataColumn columnEmpPlaceOfBirth;
            
            private global::System.Data.DataColumn columnEmpNationality;
            
            private global::System.Data.DataColumn columnEmpPassportNo;
            
            private global::System.Data.DataColumn columnEmpPassportIssuedCountry;
            
            private global::System.Data.DataColumn columnEmpPassportExpiryDate;
            
            private global::System.Data.DataColumn columnEmpResAddr;
            
            private global::System.Data.DataColumn columnEmpResAddrAreaCode;
            
            private global::System.Data.DataColumn columnEmpCorAddr;
            
            private global::System.Data.DataColumn columnEmpDateOfJoin;
            
            private global::System.Data.DataColumn columnEmpServiceDate;
            
            private global::System.Data.DataColumn columnEmpNoticePeriod;
            
            private global::System.Data.DataColumn columnEmpNoticeUnit;
            
            private global::System.Data.DataColumn columnEmpProbaPeriod;
            
            private global::System.Data.DataColumn columnEmpProbaUnit;
            
            private global::System.Data.DataColumn columnEmpProbaLastDate;
            
            private global::System.Data.DataColumn columnEmpEmail;
            
            private global::System.Data.DataColumn columnEmpHomePhoneNo;
            
            private global::System.Data.DataColumn columnEmpMobileNo;
            
            private global::System.Data.DataColumn columnEmpOfficePhoneNo;
            
            private global::System.Data.DataColumn columnRemark;
            
            private global::System.Data.DataColumn columnEmpPosID;
            
            private global::System.Data.DataColumn columnEmpPosID1;
            
            private global::System.Data.DataColumn columnEmpID1;
            
            private global::System.Data.DataColumn columnEmpPosEffFr;
            
            private global::System.Data.DataColumn columnEmpPosEffTo;
            
            private global::System.Data.DataColumn columnCompanyID;
            
            private global::System.Data.DataColumn columnPositionID;
            
            private global::System.Data.DataColumn columnRankID;
            
            private global::System.Data.DataColumn columnStaffTypeID;
            
            private global::System.Data.DataColumn columnPayGroupID;
            
            private global::System.Data.DataColumn columnLeavePlanID;
            
            private global::System.Data.DataColumn columnPositionID1;
            
            private global::System.Data.DataColumn columnPositionCode;
            
            private global::System.Data.DataColumn columnPositionDesc;
            
            private global::System.Data.DataColumn columnCompanyCode;
            
            private global::System.Data.DataColumn columnCompanyName;
            
            private global::System.Data.DataColumn columnHierarchyCode1;
            
            private global::System.Data.DataColumn columnHierarchyDesc1;
            
            private global::System.Data.DataColumn columnHierarchyCode2;
            
            private global::System.Data.DataColumn columnHierarchyDesc2;
            
            private global::System.Data.DataColumn columnHierarchyCode3;
            
            private global::System.Data.DataColumn columnHierarchyDesc3;
            
            private global::System.Data.DataColumn columnEmpTermLastDate;
            
            private global::System.Data.DataColumn columnYearOfService;
            
            private global::System.Data.DataColumn columnPhotoByteArray;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public employeedetailDataTable() {
                this.TableName = "employeedetail";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal employeedetailDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected employeedetailDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmpIDColumn {
                get {
                    return this.columnEmpID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmpNoColumn {
                get {
                    return this.columnEmpNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmpStatusColumn {
                get {
                    return this.columnEmpStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmpEngSurnameColumn {
                get {
                    return this.columnEmpEngSurname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmpEngOtherNameColumn {
                get {
                    return this.columnEmpEngOtherName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmpEngFullNameColumn {
                get {
                    return this.columnEmpEngFullName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmpChiFullNameColumn {
                get {
                    return this.columnEmpChiFullName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmpAliasColumn {
                get {
                    return this.columnEmpAlias;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmpHKIDColumn {
                get {
                    return this.columnEmpHKID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmpGenderColumn {
                get {
                    return this.columnEmpGender;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmpMaritalStatusColumn {
                get {
                    return this.columnEmpMaritalStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmpDateOfBirthColumn {
                get {
                    return this.columnEmpDateOfBirth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmpPlaceOfBirthColumn {
                get {
                    return this.columnEmpPlaceOfBirth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmpNationalityColumn {
                get {
                    return this.columnEmpNationality;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmpPassportNoColumn {
                get {
                    return this.columnEmpPassportNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmpPassportIssuedCountryColumn {
                get {
                    return this.columnEmpPassportIssuedCountry;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmpPassportExpiryDateColumn {
                get {
                    return this.columnEmpPassportExpiryDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmpResAddrColumn {
                get {
                    return this.columnEmpResAddr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmpResAddrAreaCodeColumn {
                get {
                    return this.columnEmpResAddrAreaCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmpCorAddrColumn {
                get {
                    return this.columnEmpCorAddr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmpDateOfJoinColumn {
                get {
                    return this.columnEmpDateOfJoin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmpServiceDateColumn {
                get {
                    return this.columnEmpServiceDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmpNoticePeriodColumn {
                get {
                    return this.columnEmpNoticePeriod;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmpNoticeUnitColumn {
                get {
                    return this.columnEmpNoticeUnit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmpProbaPeriodColumn {
                get {
                    return this.columnEmpProbaPeriod;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmpProbaUnitColumn {
                get {
                    return this.columnEmpProbaUnit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmpProbaLastDateColumn {
                get {
                    return this.columnEmpProbaLastDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmpEmailColumn {
                get {
                    return this.columnEmpEmail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmpHomePhoneNoColumn {
                get {
                    return this.columnEmpHomePhoneNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmpMobileNoColumn {
                get {
                    return this.columnEmpMobileNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmpOfficePhoneNoColumn {
                get {
                    return this.columnEmpOfficePhoneNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RemarkColumn {
                get {
                    return this.columnRemark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmpPosIDColumn {
                get {
                    return this.columnEmpPosID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmpPosID1Column {
                get {
                    return this.columnEmpPosID1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmpID1Column {
                get {
                    return this.columnEmpID1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmpPosEffFrColumn {
                get {
                    return this.columnEmpPosEffFr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmpPosEffToColumn {
                get {
                    return this.columnEmpPosEffTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompanyIDColumn {
                get {
                    return this.columnCompanyID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PositionIDColumn {
                get {
                    return this.columnPositionID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RankIDColumn {
                get {
                    return this.columnRankID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StaffTypeIDColumn {
                get {
                    return this.columnStaffTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PayGroupIDColumn {
                get {
                    return this.columnPayGroupID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LeavePlanIDColumn {
                get {
                    return this.columnLeavePlanID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PositionID1Column {
                get {
                    return this.columnPositionID1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PositionCodeColumn {
                get {
                    return this.columnPositionCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PositionDescColumn {
                get {
                    return this.columnPositionDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompanyCodeColumn {
                get {
                    return this.columnCompanyCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompanyNameColumn {
                get {
                    return this.columnCompanyName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HierarchyCode1Column {
                get {
                    return this.columnHierarchyCode1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HierarchyDesc1Column {
                get {
                    return this.columnHierarchyDesc1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HierarchyCode2Column {
                get {
                    return this.columnHierarchyCode2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HierarchyDesc2Column {
                get {
                    return this.columnHierarchyDesc2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HierarchyCode3Column {
                get {
                    return this.columnHierarchyCode3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HierarchyDesc3Column {
                get {
                    return this.columnHierarchyDesc3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmpTermLastDateColumn {
                get {
                    return this.columnEmpTermLastDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn YearOfServiceColumn {
                get {
                    return this.columnYearOfService;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PhotoByteArrayColumn {
                get {
                    return this.columnPhotoByteArray;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public employeedetailRow this[int index] {
                get {
                    return ((employeedetailRow)(this.Rows[index]));
                }
            }
            
            public event employeedetailRowChangeEventHandler employeedetailRowChanging;
            
            public event employeedetailRowChangeEventHandler employeedetailRowChanged;
            
            public event employeedetailRowChangeEventHandler employeedetailRowDeleting;
            
            public event employeedetailRowChangeEventHandler employeedetailRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddemployeedetailRow(employeedetailRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public employeedetailRow AddemployeedetailRow(
                        string EmpNo, 
                        string EmpStatus, 
                        string EmpEngSurname, 
                        string EmpEngOtherName, 
                        string EmpEngFullName, 
                        string EmpChiFullName, 
                        string EmpAlias, 
                        string EmpHKID, 
                        string EmpGender, 
                        string EmpMaritalStatus, 
                        System.DateTime EmpDateOfBirth, 
                        string EmpPlaceOfBirth, 
                        string EmpNationality, 
                        string EmpPassportNo, 
                        string EmpPassportIssuedCountry, 
                        System.DateTime EmpPassportExpiryDate, 
                        string EmpResAddr, 
                        string EmpResAddrAreaCode, 
                        string EmpCorAddr, 
                        System.DateTime EmpDateOfJoin, 
                        System.DateTime EmpServiceDate, 
                        int EmpNoticePeriod, 
                        string EmpNoticeUnit, 
                        int EmpProbaPeriod, 
                        string EmpProbaUnit, 
                        System.DateTime EmpProbaLastDate, 
                        string EmpEmail, 
                        string EmpHomePhoneNo, 
                        string EmpMobileNo, 
                        string EmpOfficePhoneNo, 
                        string Remark, 
                        int EmpPosID, 
                        int EmpID1, 
                        System.DateTime EmpPosEffFr, 
                        System.DateTime EmpPosEffTo, 
                        int CompanyID, 
                        int PositionID, 
                        int RankID, 
                        int StaffTypeID, 
                        int PayGroupID, 
                        int LeavePlanID, 
                        string PositionCode, 
                        string PositionDesc, 
                        string CompanyCode, 
                        string CompanyName, 
                        string HierarchyCode1, 
                        string HierarchyDesc1, 
                        string HierarchyCode2, 
                        string HierarchyDesc2, 
                        string HierarchyCode3, 
                        string HierarchyDesc3, 
                        System.DateTime EmpTermLastDate, 
                        double YearOfService, 
                        byte[] PhotoByteArray) {
                employeedetailRow rowemployeedetailRow = ((employeedetailRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        EmpNo,
                        EmpStatus,
                        EmpEngSurname,
                        EmpEngOtherName,
                        EmpEngFullName,
                        EmpChiFullName,
                        EmpAlias,
                        EmpHKID,
                        EmpGender,
                        EmpMaritalStatus,
                        EmpDateOfBirth,
                        EmpPlaceOfBirth,
                        EmpNationality,
                        EmpPassportNo,
                        EmpPassportIssuedCountry,
                        EmpPassportExpiryDate,
                        EmpResAddr,
                        EmpResAddrAreaCode,
                        EmpCorAddr,
                        EmpDateOfJoin,
                        EmpServiceDate,
                        EmpNoticePeriod,
                        EmpNoticeUnit,
                        EmpProbaPeriod,
                        EmpProbaUnit,
                        EmpProbaLastDate,
                        EmpEmail,
                        EmpHomePhoneNo,
                        EmpMobileNo,
                        EmpOfficePhoneNo,
                        Remark,
                        EmpPosID,
                        null,
                        EmpID1,
                        EmpPosEffFr,
                        EmpPosEffTo,
                        CompanyID,
                        PositionID,
                        RankID,
                        StaffTypeID,
                        PayGroupID,
                        LeavePlanID,
                        null,
                        PositionCode,
                        PositionDesc,
                        CompanyCode,
                        CompanyName,
                        HierarchyCode1,
                        HierarchyDesc1,
                        HierarchyCode2,
                        HierarchyDesc2,
                        HierarchyCode3,
                        HierarchyDesc3,
                        EmpTermLastDate,
                        YearOfService,
                        PhotoByteArray};
                rowemployeedetailRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowemployeedetailRow);
                return rowemployeedetailRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public employeedetailRow FindByEmpID(int EmpID) {
                return ((employeedetailRow)(this.Rows.Find(new object[] {
                            EmpID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                employeedetailDataTable cln = ((employeedetailDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new employeedetailDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnEmpID = base.Columns["EmpID"];
                this.columnEmpNo = base.Columns["EmpNo"];
                this.columnEmpStatus = base.Columns["EmpStatus"];
                this.columnEmpEngSurname = base.Columns["EmpEngSurname"];
                this.columnEmpEngOtherName = base.Columns["EmpEngOtherName"];
                this.columnEmpEngFullName = base.Columns["EmpEngFullName"];
                this.columnEmpChiFullName = base.Columns["EmpChiFullName"];
                this.columnEmpAlias = base.Columns["EmpAlias"];
                this.columnEmpHKID = base.Columns["EmpHKID"];
                this.columnEmpGender = base.Columns["EmpGender"];
                this.columnEmpMaritalStatus = base.Columns["EmpMaritalStatus"];
                this.columnEmpDateOfBirth = base.Columns["EmpDateOfBirth"];
                this.columnEmpPlaceOfBirth = base.Columns["EmpPlaceOfBirth"];
                this.columnEmpNationality = base.Columns["EmpNationality"];
                this.columnEmpPassportNo = base.Columns["EmpPassportNo"];
                this.columnEmpPassportIssuedCountry = base.Columns["EmpPassportIssuedCountry"];
                this.columnEmpPassportExpiryDate = base.Columns["EmpPassportExpiryDate"];
                this.columnEmpResAddr = base.Columns["EmpResAddr"];
                this.columnEmpResAddrAreaCode = base.Columns["EmpResAddrAreaCode"];
                this.columnEmpCorAddr = base.Columns["EmpCorAddr"];
                this.columnEmpDateOfJoin = base.Columns["EmpDateOfJoin"];
                this.columnEmpServiceDate = base.Columns["EmpServiceDate"];
                this.columnEmpNoticePeriod = base.Columns["EmpNoticePeriod"];
                this.columnEmpNoticeUnit = base.Columns["EmpNoticeUnit"];
                this.columnEmpProbaPeriod = base.Columns["EmpProbaPeriod"];
                this.columnEmpProbaUnit = base.Columns["EmpProbaUnit"];
                this.columnEmpProbaLastDate = base.Columns["EmpProbaLastDate"];
                this.columnEmpEmail = base.Columns["EmpEmail"];
                this.columnEmpHomePhoneNo = base.Columns["EmpHomePhoneNo"];
                this.columnEmpMobileNo = base.Columns["EmpMobileNo"];
                this.columnEmpOfficePhoneNo = base.Columns["EmpOfficePhoneNo"];
                this.columnRemark = base.Columns["Remark"];
                this.columnEmpPosID = base.Columns["EmpPosID"];
                this.columnEmpPosID1 = base.Columns["EmpPosID1"];
                this.columnEmpID1 = base.Columns["EmpID1"];
                this.columnEmpPosEffFr = base.Columns["EmpPosEffFr"];
                this.columnEmpPosEffTo = base.Columns["EmpPosEffTo"];
                this.columnCompanyID = base.Columns["CompanyID"];
                this.columnPositionID = base.Columns["PositionID"];
                this.columnRankID = base.Columns["RankID"];
                this.columnStaffTypeID = base.Columns["StaffTypeID"];
                this.columnPayGroupID = base.Columns["PayGroupID"];
                this.columnLeavePlanID = base.Columns["LeavePlanID"];
                this.columnPositionID1 = base.Columns["PositionID1"];
                this.columnPositionCode = base.Columns["PositionCode"];
                this.columnPositionDesc = base.Columns["PositionDesc"];
                this.columnCompanyCode = base.Columns["CompanyCode"];
                this.columnCompanyName = base.Columns["CompanyName"];
                this.columnHierarchyCode1 = base.Columns["HierarchyCode1"];
                this.columnHierarchyDesc1 = base.Columns["HierarchyDesc1"];
                this.columnHierarchyCode2 = base.Columns["HierarchyCode2"];
                this.columnHierarchyDesc2 = base.Columns["HierarchyDesc2"];
                this.columnHierarchyCode3 = base.Columns["HierarchyCode3"];
                this.columnHierarchyDesc3 = base.Columns["HierarchyDesc3"];
                this.columnEmpTermLastDate = base.Columns["EmpTermLastDate"];
                this.columnYearOfService = base.Columns["YearOfService"];
                this.columnPhotoByteArray = base.Columns["PhotoByteArray"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnEmpID = new global::System.Data.DataColumn("EmpID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpID);
                this.columnEmpNo = new global::System.Data.DataColumn("EmpNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpNo);
                this.columnEmpStatus = new global::System.Data.DataColumn("EmpStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpStatus);
                this.columnEmpEngSurname = new global::System.Data.DataColumn("EmpEngSurname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpEngSurname);
                this.columnEmpEngOtherName = new global::System.Data.DataColumn("EmpEngOtherName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpEngOtherName);
                this.columnEmpEngFullName = new global::System.Data.DataColumn("EmpEngFullName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpEngFullName);
                this.columnEmpChiFullName = new global::System.Data.DataColumn("EmpChiFullName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpChiFullName);
                this.columnEmpAlias = new global::System.Data.DataColumn("EmpAlias", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpAlias);
                this.columnEmpHKID = new global::System.Data.DataColumn("EmpHKID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpHKID);
                this.columnEmpGender = new global::System.Data.DataColumn("EmpGender", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpGender);
                this.columnEmpMaritalStatus = new global::System.Data.DataColumn("EmpMaritalStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpMaritalStatus);
                this.columnEmpDateOfBirth = new global::System.Data.DataColumn("EmpDateOfBirth", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpDateOfBirth);
                this.columnEmpPlaceOfBirth = new global::System.Data.DataColumn("EmpPlaceOfBirth", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpPlaceOfBirth);
                this.columnEmpNationality = new global::System.Data.DataColumn("EmpNationality", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpNationality);
                this.columnEmpPassportNo = new global::System.Data.DataColumn("EmpPassportNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpPassportNo);
                this.columnEmpPassportIssuedCountry = new global::System.Data.DataColumn("EmpPassportIssuedCountry", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpPassportIssuedCountry);
                this.columnEmpPassportExpiryDate = new global::System.Data.DataColumn("EmpPassportExpiryDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpPassportExpiryDate);
                this.columnEmpResAddr = new global::System.Data.DataColumn("EmpResAddr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpResAddr);
                this.columnEmpResAddrAreaCode = new global::System.Data.DataColumn("EmpResAddrAreaCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpResAddrAreaCode);
                this.columnEmpCorAddr = new global::System.Data.DataColumn("EmpCorAddr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpCorAddr);
                this.columnEmpDateOfJoin = new global::System.Data.DataColumn("EmpDateOfJoin", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpDateOfJoin);
                this.columnEmpServiceDate = new global::System.Data.DataColumn("EmpServiceDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpServiceDate);
                this.columnEmpNoticePeriod = new global::System.Data.DataColumn("EmpNoticePeriod", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpNoticePeriod);
                this.columnEmpNoticeUnit = new global::System.Data.DataColumn("EmpNoticeUnit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpNoticeUnit);
                this.columnEmpProbaPeriod = new global::System.Data.DataColumn("EmpProbaPeriod", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpProbaPeriod);
                this.columnEmpProbaUnit = new global::System.Data.DataColumn("EmpProbaUnit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpProbaUnit);
                this.columnEmpProbaLastDate = new global::System.Data.DataColumn("EmpProbaLastDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpProbaLastDate);
                this.columnEmpEmail = new global::System.Data.DataColumn("EmpEmail", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpEmail);
                this.columnEmpHomePhoneNo = new global::System.Data.DataColumn("EmpHomePhoneNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpHomePhoneNo);
                this.columnEmpMobileNo = new global::System.Data.DataColumn("EmpMobileNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpMobileNo);
                this.columnEmpOfficePhoneNo = new global::System.Data.DataColumn("EmpOfficePhoneNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpOfficePhoneNo);
                this.columnRemark = new global::System.Data.DataColumn("Remark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemark);
                this.columnEmpPosID = new global::System.Data.DataColumn("EmpPosID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpPosID);
                this.columnEmpPosID1 = new global::System.Data.DataColumn("EmpPosID1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpPosID1);
                this.columnEmpID1 = new global::System.Data.DataColumn("EmpID1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpID1);
                this.columnEmpPosEffFr = new global::System.Data.DataColumn("EmpPosEffFr", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpPosEffFr);
                this.columnEmpPosEffTo = new global::System.Data.DataColumn("EmpPosEffTo", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpPosEffTo);
                this.columnCompanyID = new global::System.Data.DataColumn("CompanyID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyID);
                this.columnPositionID = new global::System.Data.DataColumn("PositionID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPositionID);
                this.columnRankID = new global::System.Data.DataColumn("RankID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRankID);
                this.columnStaffTypeID = new global::System.Data.DataColumn("StaffTypeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStaffTypeID);
                this.columnPayGroupID = new global::System.Data.DataColumn("PayGroupID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPayGroupID);
                this.columnLeavePlanID = new global::System.Data.DataColumn("LeavePlanID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLeavePlanID);
                this.columnPositionID1 = new global::System.Data.DataColumn("PositionID1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPositionID1);
                this.columnPositionCode = new global::System.Data.DataColumn("PositionCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPositionCode);
                this.columnPositionDesc = new global::System.Data.DataColumn("PositionDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPositionDesc);
                this.columnCompanyCode = new global::System.Data.DataColumn("CompanyCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyCode);
                this.columnCompanyName = new global::System.Data.DataColumn("CompanyName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyName);
                this.columnHierarchyCode1 = new global::System.Data.DataColumn("HierarchyCode1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHierarchyCode1);
                this.columnHierarchyDesc1 = new global::System.Data.DataColumn("HierarchyDesc1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHierarchyDesc1);
                this.columnHierarchyCode2 = new global::System.Data.DataColumn("HierarchyCode2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHierarchyCode2);
                this.columnHierarchyDesc2 = new global::System.Data.DataColumn("HierarchyDesc2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHierarchyDesc2);
                this.columnHierarchyCode3 = new global::System.Data.DataColumn("HierarchyCode3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHierarchyCode3);
                this.columnHierarchyDesc3 = new global::System.Data.DataColumn("HierarchyDesc3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHierarchyDesc3);
                this.columnEmpTermLastDate = new global::System.Data.DataColumn("EmpTermLastDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpTermLastDate);
                this.columnYearOfService = new global::System.Data.DataColumn("YearOfService", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYearOfService);
                this.columnPhotoByteArray = new global::System.Data.DataColumn("PhotoByteArray", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhotoByteArray);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnEmpID}, true));
                this.columnEmpID.AutoIncrement = true;
                this.columnEmpID.AllowDBNull = false;
                this.columnEmpID.ReadOnly = true;
                this.columnEmpID.Unique = true;
                this.columnEmpNo.MaxLength = 50;
                this.columnEmpStatus.MaxLength = 3;
                this.columnEmpHKID.MaxLength = 50;
                this.columnEmpGender.MaxLength = 50;
                this.columnEmpMaritalStatus.MaxLength = 50;
                this.columnEmpPassportNo.MaxLength = 50;
                this.columnEmpPassportIssuedCountry.MaxLength = 50;
                this.columnEmpResAddr.MaxLength = 100;
                this.columnEmpResAddrAreaCode.MaxLength = 50;
                this.columnEmpCorAddr.MaxLength = 100;
                this.columnEmpNoticeUnit.MaxLength = 50;
                this.columnEmpProbaUnit.MaxLength = 50;
                this.columnEmpPosID1.AutoIncrement = true;
                this.columnEmpPosID1.ReadOnly = true;
                this.columnPositionID1.AutoIncrement = true;
                this.columnPositionID1.ReadOnly = true;
                this.columnPositionCode.MaxLength = 50;
                this.columnHierarchyDesc1.Caption = "HierarchyDesc3";
                this.columnHierarchyCode2.Caption = "HierarchyCode3";
                this.columnHierarchyCode3.Caption = "HierarchyCode2";
                this.columnHierarchyDesc3.Caption = "HierarchyDesc1";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public employeedetailRow NewemployeedetailRow() {
                return ((employeedetailRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new employeedetailRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(employeedetailRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.employeedetailRowChanged != null)) {
                    this.employeedetailRowChanged(this, new employeedetailRowChangeEvent(((employeedetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.employeedetailRowChanging != null)) {
                    this.employeedetailRowChanging(this, new employeedetailRowChangeEvent(((employeedetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.employeedetailRowDeleted != null)) {
                    this.employeedetailRowDeleted(this, new employeedetailRowChangeEvent(((employeedetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.employeedetailRowDeleting != null)) {
                    this.employeedetailRowDeleting(this, new employeedetailRowChangeEvent(((employeedetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveemployeedetailRow(employeedetailRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Payroll_LongServicePaymentSeverancePayment_List ds = new Payroll_LongServicePaymentSeverancePayment_List();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "employeedetailDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LongServicePaymentSeverancePaymentDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnEmpID;
            
            private global::System.Data.DataColumn columnLongServicePayment;
            
            private global::System.Data.DataColumn columnSeverancePayment;
            
            private global::System.Data.DataColumn columnEmployerContribution;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LongServicePaymentSeverancePaymentDataTable() {
                this.TableName = "LongServicePaymentSeverancePayment";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LongServicePaymentSeverancePaymentDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LongServicePaymentSeverancePaymentDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmpIDColumn {
                get {
                    return this.columnEmpID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LongServicePaymentColumn {
                get {
                    return this.columnLongServicePayment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SeverancePaymentColumn {
                get {
                    return this.columnSeverancePayment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmployerContributionColumn {
                get {
                    return this.columnEmployerContribution;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LongServicePaymentSeverancePaymentRow this[int index] {
                get {
                    return ((LongServicePaymentSeverancePaymentRow)(this.Rows[index]));
                }
            }
            
            public event LongServicePaymentSeverancePaymentRowChangeEventHandler LongServicePaymentSeverancePaymentRowChanging;
            
            public event LongServicePaymentSeverancePaymentRowChangeEventHandler LongServicePaymentSeverancePaymentRowChanged;
            
            public event LongServicePaymentSeverancePaymentRowChangeEventHandler LongServicePaymentSeverancePaymentRowDeleting;
            
            public event LongServicePaymentSeverancePaymentRowChangeEventHandler LongServicePaymentSeverancePaymentRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLongServicePaymentSeverancePaymentRow(LongServicePaymentSeverancePaymentRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LongServicePaymentSeverancePaymentRow AddLongServicePaymentSeverancePaymentRow(employeedetailRow parentemployeedetailRowByemployeedetail_LongServicePaymentSeverancePayment, double LongServicePayment, double SeverancePayment, double EmployerContribution) {
                LongServicePaymentSeverancePaymentRow rowLongServicePaymentSeverancePaymentRow = ((LongServicePaymentSeverancePaymentRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        LongServicePayment,
                        SeverancePayment,
                        EmployerContribution};
                if ((parentemployeedetailRowByemployeedetail_LongServicePaymentSeverancePayment != null)) {
                    columnValuesArray[0] = parentemployeedetailRowByemployeedetail_LongServicePaymentSeverancePayment[0];
                }
                rowLongServicePaymentSeverancePaymentRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLongServicePaymentSeverancePaymentRow);
                return rowLongServicePaymentSeverancePaymentRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LongServicePaymentSeverancePaymentDataTable cln = ((LongServicePaymentSeverancePaymentDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LongServicePaymentSeverancePaymentDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnEmpID = base.Columns["EmpID"];
                this.columnLongServicePayment = base.Columns["LongServicePayment"];
                this.columnSeverancePayment = base.Columns["SeverancePayment"];
                this.columnEmployerContribution = base.Columns["EmployerContribution"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnEmpID = new global::System.Data.DataColumn("EmpID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpID);
                this.columnLongServicePayment = new global::System.Data.DataColumn("LongServicePayment", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLongServicePayment);
                this.columnSeverancePayment = new global::System.Data.DataColumn("SeverancePayment", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSeverancePayment);
                this.columnEmployerContribution = new global::System.Data.DataColumn("EmployerContribution", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmployerContribution);
                this.columnEmpID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LongServicePaymentSeverancePaymentRow NewLongServicePaymentSeverancePaymentRow() {
                return ((LongServicePaymentSeverancePaymentRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LongServicePaymentSeverancePaymentRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LongServicePaymentSeverancePaymentRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LongServicePaymentSeverancePaymentRowChanged != null)) {
                    this.LongServicePaymentSeverancePaymentRowChanged(this, new LongServicePaymentSeverancePaymentRowChangeEvent(((LongServicePaymentSeverancePaymentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LongServicePaymentSeverancePaymentRowChanging != null)) {
                    this.LongServicePaymentSeverancePaymentRowChanging(this, new LongServicePaymentSeverancePaymentRowChangeEvent(((LongServicePaymentSeverancePaymentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LongServicePaymentSeverancePaymentRowDeleted != null)) {
                    this.LongServicePaymentSeverancePaymentRowDeleted(this, new LongServicePaymentSeverancePaymentRowChangeEvent(((LongServicePaymentSeverancePaymentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LongServicePaymentSeverancePaymentRowDeleting != null)) {
                    this.LongServicePaymentSeverancePaymentRowDeleting(this, new LongServicePaymentSeverancePaymentRowChangeEvent(((LongServicePaymentSeverancePaymentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLongServicePaymentSeverancePaymentRow(LongServicePaymentSeverancePaymentRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Payroll_LongServicePaymentSeverancePayment_List ds = new Payroll_LongServicePaymentSeverancePayment_List();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LongServicePaymentSeverancePaymentDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class employeedetailRow : global::System.Data.DataRow {
            
            private employeedetailDataTable tableemployeedetail;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal employeedetailRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableemployeedetail = ((employeedetailDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EmpID {
                get {
                    return ((int)(this[this.tableemployeedetail.EmpIDColumn]));
                }
                set {
                    this[this.tableemployeedetail.EmpIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EmpNo {
                get {
                    try {
                        return ((string)(this[this.tableemployeedetail.EmpNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmpNo\' in table \'employeedetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployeedetail.EmpNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EmpStatus {
                get {
                    try {
                        return ((string)(this[this.tableemployeedetail.EmpStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmpStatus\' in table \'employeedetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployeedetail.EmpStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EmpEngSurname {
                get {
                    try {
                        return ((string)(this[this.tableemployeedetail.EmpEngSurnameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmpEngSurname\' in table \'employeedetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployeedetail.EmpEngSurnameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EmpEngOtherName {
                get {
                    try {
                        return ((string)(this[this.tableemployeedetail.EmpEngOtherNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmpEngOtherName\' in table \'employeedetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployeedetail.EmpEngOtherNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EmpEngFullName {
                get {
                    try {
                        return ((string)(this[this.tableemployeedetail.EmpEngFullNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmpEngFullName\' in table \'employeedetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployeedetail.EmpEngFullNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EmpChiFullName {
                get {
                    try {
                        return ((string)(this[this.tableemployeedetail.EmpChiFullNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmpChiFullName\' in table \'employeedetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployeedetail.EmpChiFullNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EmpAlias {
                get {
                    try {
                        return ((string)(this[this.tableemployeedetail.EmpAliasColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmpAlias\' in table \'employeedetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployeedetail.EmpAliasColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EmpHKID {
                get {
                    try {
                        return ((string)(this[this.tableemployeedetail.EmpHKIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmpHKID\' in table \'employeedetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployeedetail.EmpHKIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EmpGender {
                get {
                    try {
                        return ((string)(this[this.tableemployeedetail.EmpGenderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmpGender\' in table \'employeedetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployeedetail.EmpGenderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EmpMaritalStatus {
                get {
                    try {
                        return ((string)(this[this.tableemployeedetail.EmpMaritalStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmpMaritalStatus\' in table \'employeedetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployeedetail.EmpMaritalStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime EmpDateOfBirth {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableemployeedetail.EmpDateOfBirthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmpDateOfBirth\' in table \'employeedetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployeedetail.EmpDateOfBirthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EmpPlaceOfBirth {
                get {
                    try {
                        return ((string)(this[this.tableemployeedetail.EmpPlaceOfBirthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmpPlaceOfBirth\' in table \'employeedetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployeedetail.EmpPlaceOfBirthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EmpNationality {
                get {
                    try {
                        return ((string)(this[this.tableemployeedetail.EmpNationalityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmpNationality\' in table \'employeedetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployeedetail.EmpNationalityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EmpPassportNo {
                get {
                    try {
                        return ((string)(this[this.tableemployeedetail.EmpPassportNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmpPassportNo\' in table \'employeedetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployeedetail.EmpPassportNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EmpPassportIssuedCountry {
                get {
                    try {
                        return ((string)(this[this.tableemployeedetail.EmpPassportIssuedCountryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmpPassportIssuedCountry\' in table \'employeedetail\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableemployeedetail.EmpPassportIssuedCountryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime EmpPassportExpiryDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableemployeedetail.EmpPassportExpiryDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmpPassportExpiryDate\' in table \'employeedetail\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableemployeedetail.EmpPassportExpiryDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EmpResAddr {
                get {
                    try {
                        return ((string)(this[this.tableemployeedetail.EmpResAddrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmpResAddr\' in table \'employeedetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployeedetail.EmpResAddrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EmpResAddrAreaCode {
                get {
                    try {
                        return ((string)(this[this.tableemployeedetail.EmpResAddrAreaCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmpResAddrAreaCode\' in table \'employeedetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployeedetail.EmpResAddrAreaCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EmpCorAddr {
                get {
                    try {
                        return ((string)(this[this.tableemployeedetail.EmpCorAddrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmpCorAddr\' in table \'employeedetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployeedetail.EmpCorAddrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime EmpDateOfJoin {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableemployeedetail.EmpDateOfJoinColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmpDateOfJoin\' in table \'employeedetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployeedetail.EmpDateOfJoinColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime EmpServiceDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableemployeedetail.EmpServiceDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmpServiceDate\' in table \'employeedetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployeedetail.EmpServiceDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EmpNoticePeriod {
                get {
                    try {
                        return ((int)(this[this.tableemployeedetail.EmpNoticePeriodColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmpNoticePeriod\' in table \'employeedetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployeedetail.EmpNoticePeriodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EmpNoticeUnit {
                get {
                    try {
                        return ((string)(this[this.tableemployeedetail.EmpNoticeUnitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmpNoticeUnit\' in table \'employeedetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployeedetail.EmpNoticeUnitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EmpProbaPeriod {
                get {
                    try {
                        return ((int)(this[this.tableemployeedetail.EmpProbaPeriodColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmpProbaPeriod\' in table \'employeedetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployeedetail.EmpProbaPeriodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EmpProbaUnit {
                get {
                    try {
                        return ((string)(this[this.tableemployeedetail.EmpProbaUnitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmpProbaUnit\' in table \'employeedetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployeedetail.EmpProbaUnitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime EmpProbaLastDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableemployeedetail.EmpProbaLastDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmpProbaLastDate\' in table \'employeedetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployeedetail.EmpProbaLastDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EmpEmail {
                get {
                    try {
                        return ((string)(this[this.tableemployeedetail.EmpEmailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmpEmail\' in table \'employeedetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployeedetail.EmpEmailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EmpHomePhoneNo {
                get {
                    try {
                        return ((string)(this[this.tableemployeedetail.EmpHomePhoneNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmpHomePhoneNo\' in table \'employeedetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployeedetail.EmpHomePhoneNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EmpMobileNo {
                get {
                    try {
                        return ((string)(this[this.tableemployeedetail.EmpMobileNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmpMobileNo\' in table \'employeedetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployeedetail.EmpMobileNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EmpOfficePhoneNo {
                get {
                    try {
                        return ((string)(this[this.tableemployeedetail.EmpOfficePhoneNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmpOfficePhoneNo\' in table \'employeedetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployeedetail.EmpOfficePhoneNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Remark {
                get {
                    try {
                        return ((string)(this[this.tableemployeedetail.RemarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Remark\' in table \'employeedetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployeedetail.RemarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EmpPosID {
                get {
                    try {
                        return ((int)(this[this.tableemployeedetail.EmpPosIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmpPosID\' in table \'employeedetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployeedetail.EmpPosIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EmpPosID1 {
                get {
                    try {
                        return ((int)(this[this.tableemployeedetail.EmpPosID1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmpPosID1\' in table \'employeedetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployeedetail.EmpPosID1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EmpID1 {
                get {
                    try {
                        return ((int)(this[this.tableemployeedetail.EmpID1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmpID1\' in table \'employeedetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployeedetail.EmpID1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime EmpPosEffFr {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableemployeedetail.EmpPosEffFrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmpPosEffFr\' in table \'employeedetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployeedetail.EmpPosEffFrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime EmpPosEffTo {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableemployeedetail.EmpPosEffToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmpPosEffTo\' in table \'employeedetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployeedetail.EmpPosEffToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CompanyID {
                get {
                    try {
                        return ((int)(this[this.tableemployeedetail.CompanyIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompanyID\' in table \'employeedetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployeedetail.CompanyIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PositionID {
                get {
                    try {
                        return ((int)(this[this.tableemployeedetail.PositionIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PositionID\' in table \'employeedetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployeedetail.PositionIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RankID {
                get {
                    try {
                        return ((int)(this[this.tableemployeedetail.RankIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RankID\' in table \'employeedetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployeedetail.RankIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int StaffTypeID {
                get {
                    try {
                        return ((int)(this[this.tableemployeedetail.StaffTypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StaffTypeID\' in table \'employeedetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployeedetail.StaffTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PayGroupID {
                get {
                    try {
                        return ((int)(this[this.tableemployeedetail.PayGroupIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PayGroupID\' in table \'employeedetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployeedetail.PayGroupIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LeavePlanID {
                get {
                    try {
                        return ((int)(this[this.tableemployeedetail.LeavePlanIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LeavePlanID\' in table \'employeedetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployeedetail.LeavePlanIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PositionID1 {
                get {
                    try {
                        return ((int)(this[this.tableemployeedetail.PositionID1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PositionID1\' in table \'employeedetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployeedetail.PositionID1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PositionCode {
                get {
                    try {
                        return ((string)(this[this.tableemployeedetail.PositionCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PositionCode\' in table \'employeedetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployeedetail.PositionCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PositionDesc {
                get {
                    try {
                        return ((string)(this[this.tableemployeedetail.PositionDescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PositionDesc\' in table \'employeedetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployeedetail.PositionDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CompanyCode {
                get {
                    try {
                        return ((string)(this[this.tableemployeedetail.CompanyCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompanyCode\' in table \'employeedetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployeedetail.CompanyCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CompanyName {
                get {
                    try {
                        return ((string)(this[this.tableemployeedetail.CompanyNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompanyName\' in table \'employeedetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployeedetail.CompanyNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HierarchyCode1 {
                get {
                    try {
                        return ((string)(this[this.tableemployeedetail.HierarchyCode1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HierarchyCode1\' in table \'employeedetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployeedetail.HierarchyCode1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HierarchyDesc1 {
                get {
                    try {
                        return ((string)(this[this.tableemployeedetail.HierarchyDesc1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HierarchyDesc1\' in table \'employeedetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployeedetail.HierarchyDesc1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HierarchyCode2 {
                get {
                    try {
                        return ((string)(this[this.tableemployeedetail.HierarchyCode2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HierarchyCode2\' in table \'employeedetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployeedetail.HierarchyCode2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HierarchyDesc2 {
                get {
                    try {
                        return ((string)(this[this.tableemployeedetail.HierarchyDesc2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HierarchyDesc2\' in table \'employeedetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployeedetail.HierarchyDesc2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HierarchyCode3 {
                get {
                    try {
                        return ((string)(this[this.tableemployeedetail.HierarchyCode3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HierarchyCode3\' in table \'employeedetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployeedetail.HierarchyCode3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HierarchyDesc3 {
                get {
                    try {
                        return ((string)(this[this.tableemployeedetail.HierarchyDesc3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HierarchyDesc3\' in table \'employeedetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployeedetail.HierarchyDesc3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime EmpTermLastDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableemployeedetail.EmpTermLastDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmpTermLastDate\' in table \'employeedetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployeedetail.EmpTermLastDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double YearOfService {
                get {
                    try {
                        return ((double)(this[this.tableemployeedetail.YearOfServiceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'YearOfService\' in table \'employeedetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployeedetail.YearOfServiceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] PhotoByteArray {
                get {
                    try {
                        return ((byte[])(this[this.tableemployeedetail.PhotoByteArrayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PhotoByteArray\' in table \'employeedetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployeedetail.PhotoByteArrayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmpNoNull() {
                return this.IsNull(this.tableemployeedetail.EmpNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmpNoNull() {
                this[this.tableemployeedetail.EmpNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmpStatusNull() {
                return this.IsNull(this.tableemployeedetail.EmpStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmpStatusNull() {
                this[this.tableemployeedetail.EmpStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmpEngSurnameNull() {
                return this.IsNull(this.tableemployeedetail.EmpEngSurnameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmpEngSurnameNull() {
                this[this.tableemployeedetail.EmpEngSurnameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmpEngOtherNameNull() {
                return this.IsNull(this.tableemployeedetail.EmpEngOtherNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmpEngOtherNameNull() {
                this[this.tableemployeedetail.EmpEngOtherNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmpEngFullNameNull() {
                return this.IsNull(this.tableemployeedetail.EmpEngFullNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmpEngFullNameNull() {
                this[this.tableemployeedetail.EmpEngFullNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmpChiFullNameNull() {
                return this.IsNull(this.tableemployeedetail.EmpChiFullNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmpChiFullNameNull() {
                this[this.tableemployeedetail.EmpChiFullNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmpAliasNull() {
                return this.IsNull(this.tableemployeedetail.EmpAliasColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmpAliasNull() {
                this[this.tableemployeedetail.EmpAliasColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmpHKIDNull() {
                return this.IsNull(this.tableemployeedetail.EmpHKIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmpHKIDNull() {
                this[this.tableemployeedetail.EmpHKIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmpGenderNull() {
                return this.IsNull(this.tableemployeedetail.EmpGenderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmpGenderNull() {
                this[this.tableemployeedetail.EmpGenderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmpMaritalStatusNull() {
                return this.IsNull(this.tableemployeedetail.EmpMaritalStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmpMaritalStatusNull() {
                this[this.tableemployeedetail.EmpMaritalStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmpDateOfBirthNull() {
                return this.IsNull(this.tableemployeedetail.EmpDateOfBirthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmpDateOfBirthNull() {
                this[this.tableemployeedetail.EmpDateOfBirthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmpPlaceOfBirthNull() {
                return this.IsNull(this.tableemployeedetail.EmpPlaceOfBirthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmpPlaceOfBirthNull() {
                this[this.tableemployeedetail.EmpPlaceOfBirthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmpNationalityNull() {
                return this.IsNull(this.tableemployeedetail.EmpNationalityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmpNationalityNull() {
                this[this.tableemployeedetail.EmpNationalityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmpPassportNoNull() {
                return this.IsNull(this.tableemployeedetail.EmpPassportNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmpPassportNoNull() {
                this[this.tableemployeedetail.EmpPassportNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmpPassportIssuedCountryNull() {
                return this.IsNull(this.tableemployeedetail.EmpPassportIssuedCountryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmpPassportIssuedCountryNull() {
                this[this.tableemployeedetail.EmpPassportIssuedCountryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmpPassportExpiryDateNull() {
                return this.IsNull(this.tableemployeedetail.EmpPassportExpiryDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmpPassportExpiryDateNull() {
                this[this.tableemployeedetail.EmpPassportExpiryDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmpResAddrNull() {
                return this.IsNull(this.tableemployeedetail.EmpResAddrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmpResAddrNull() {
                this[this.tableemployeedetail.EmpResAddrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmpResAddrAreaCodeNull() {
                return this.IsNull(this.tableemployeedetail.EmpResAddrAreaCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmpResAddrAreaCodeNull() {
                this[this.tableemployeedetail.EmpResAddrAreaCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmpCorAddrNull() {
                return this.IsNull(this.tableemployeedetail.EmpCorAddrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmpCorAddrNull() {
                this[this.tableemployeedetail.EmpCorAddrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmpDateOfJoinNull() {
                return this.IsNull(this.tableemployeedetail.EmpDateOfJoinColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmpDateOfJoinNull() {
                this[this.tableemployeedetail.EmpDateOfJoinColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmpServiceDateNull() {
                return this.IsNull(this.tableemployeedetail.EmpServiceDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmpServiceDateNull() {
                this[this.tableemployeedetail.EmpServiceDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmpNoticePeriodNull() {
                return this.IsNull(this.tableemployeedetail.EmpNoticePeriodColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmpNoticePeriodNull() {
                this[this.tableemployeedetail.EmpNoticePeriodColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmpNoticeUnitNull() {
                return this.IsNull(this.tableemployeedetail.EmpNoticeUnitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmpNoticeUnitNull() {
                this[this.tableemployeedetail.EmpNoticeUnitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmpProbaPeriodNull() {
                return this.IsNull(this.tableemployeedetail.EmpProbaPeriodColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmpProbaPeriodNull() {
                this[this.tableemployeedetail.EmpProbaPeriodColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmpProbaUnitNull() {
                return this.IsNull(this.tableemployeedetail.EmpProbaUnitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmpProbaUnitNull() {
                this[this.tableemployeedetail.EmpProbaUnitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmpProbaLastDateNull() {
                return this.IsNull(this.tableemployeedetail.EmpProbaLastDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmpProbaLastDateNull() {
                this[this.tableemployeedetail.EmpProbaLastDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmpEmailNull() {
                return this.IsNull(this.tableemployeedetail.EmpEmailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmpEmailNull() {
                this[this.tableemployeedetail.EmpEmailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmpHomePhoneNoNull() {
                return this.IsNull(this.tableemployeedetail.EmpHomePhoneNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmpHomePhoneNoNull() {
                this[this.tableemployeedetail.EmpHomePhoneNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmpMobileNoNull() {
                return this.IsNull(this.tableemployeedetail.EmpMobileNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmpMobileNoNull() {
                this[this.tableemployeedetail.EmpMobileNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmpOfficePhoneNoNull() {
                return this.IsNull(this.tableemployeedetail.EmpOfficePhoneNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmpOfficePhoneNoNull() {
                this[this.tableemployeedetail.EmpOfficePhoneNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRemarkNull() {
                return this.IsNull(this.tableemployeedetail.RemarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRemarkNull() {
                this[this.tableemployeedetail.RemarkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmpPosIDNull() {
                return this.IsNull(this.tableemployeedetail.EmpPosIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmpPosIDNull() {
                this[this.tableemployeedetail.EmpPosIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmpPosID1Null() {
                return this.IsNull(this.tableemployeedetail.EmpPosID1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmpPosID1Null() {
                this[this.tableemployeedetail.EmpPosID1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmpID1Null() {
                return this.IsNull(this.tableemployeedetail.EmpID1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmpID1Null() {
                this[this.tableemployeedetail.EmpID1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmpPosEffFrNull() {
                return this.IsNull(this.tableemployeedetail.EmpPosEffFrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmpPosEffFrNull() {
                this[this.tableemployeedetail.EmpPosEffFrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmpPosEffToNull() {
                return this.IsNull(this.tableemployeedetail.EmpPosEffToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmpPosEffToNull() {
                this[this.tableemployeedetail.EmpPosEffToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompanyIDNull() {
                return this.IsNull(this.tableemployeedetail.CompanyIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompanyIDNull() {
                this[this.tableemployeedetail.CompanyIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPositionIDNull() {
                return this.IsNull(this.tableemployeedetail.PositionIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPositionIDNull() {
                this[this.tableemployeedetail.PositionIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRankIDNull() {
                return this.IsNull(this.tableemployeedetail.RankIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRankIDNull() {
                this[this.tableemployeedetail.RankIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStaffTypeIDNull() {
                return this.IsNull(this.tableemployeedetail.StaffTypeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStaffTypeIDNull() {
                this[this.tableemployeedetail.StaffTypeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPayGroupIDNull() {
                return this.IsNull(this.tableemployeedetail.PayGroupIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPayGroupIDNull() {
                this[this.tableemployeedetail.PayGroupIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLeavePlanIDNull() {
                return this.IsNull(this.tableemployeedetail.LeavePlanIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLeavePlanIDNull() {
                this[this.tableemployeedetail.LeavePlanIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPositionID1Null() {
                return this.IsNull(this.tableemployeedetail.PositionID1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPositionID1Null() {
                this[this.tableemployeedetail.PositionID1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPositionCodeNull() {
                return this.IsNull(this.tableemployeedetail.PositionCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPositionCodeNull() {
                this[this.tableemployeedetail.PositionCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPositionDescNull() {
                return this.IsNull(this.tableemployeedetail.PositionDescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPositionDescNull() {
                this[this.tableemployeedetail.PositionDescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompanyCodeNull() {
                return this.IsNull(this.tableemployeedetail.CompanyCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompanyCodeNull() {
                this[this.tableemployeedetail.CompanyCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompanyNameNull() {
                return this.IsNull(this.tableemployeedetail.CompanyNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompanyNameNull() {
                this[this.tableemployeedetail.CompanyNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHierarchyCode1Null() {
                return this.IsNull(this.tableemployeedetail.HierarchyCode1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHierarchyCode1Null() {
                this[this.tableemployeedetail.HierarchyCode1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHierarchyDesc1Null() {
                return this.IsNull(this.tableemployeedetail.HierarchyDesc1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHierarchyDesc1Null() {
                this[this.tableemployeedetail.HierarchyDesc1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHierarchyCode2Null() {
                return this.IsNull(this.tableemployeedetail.HierarchyCode2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHierarchyCode2Null() {
                this[this.tableemployeedetail.HierarchyCode2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHierarchyDesc2Null() {
                return this.IsNull(this.tableemployeedetail.HierarchyDesc2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHierarchyDesc2Null() {
                this[this.tableemployeedetail.HierarchyDesc2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHierarchyCode3Null() {
                return this.IsNull(this.tableemployeedetail.HierarchyCode3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHierarchyCode3Null() {
                this[this.tableemployeedetail.HierarchyCode3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHierarchyDesc3Null() {
                return this.IsNull(this.tableemployeedetail.HierarchyDesc3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHierarchyDesc3Null() {
                this[this.tableemployeedetail.HierarchyDesc3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmpTermLastDateNull() {
                return this.IsNull(this.tableemployeedetail.EmpTermLastDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmpTermLastDateNull() {
                this[this.tableemployeedetail.EmpTermLastDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsYearOfServiceNull() {
                return this.IsNull(this.tableemployeedetail.YearOfServiceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetYearOfServiceNull() {
                this[this.tableemployeedetail.YearOfServiceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPhotoByteArrayNull() {
                return this.IsNull(this.tableemployeedetail.PhotoByteArrayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPhotoByteArrayNull() {
                this[this.tableemployeedetail.PhotoByteArrayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LongServicePaymentSeverancePaymentRow[] GetLongServicePaymentSeverancePaymentRows() {
                if ((this.Table.ChildRelations["employeedetail_LongServicePaymentSeverancePayment"] == null)) {
                    return new LongServicePaymentSeverancePaymentRow[0];
                }
                else {
                    return ((LongServicePaymentSeverancePaymentRow[])(base.GetChildRows(this.Table.ChildRelations["employeedetail_LongServicePaymentSeverancePayment"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LongServicePaymentSeverancePaymentRow : global::System.Data.DataRow {
            
            private LongServicePaymentSeverancePaymentDataTable tableLongServicePaymentSeverancePayment;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LongServicePaymentSeverancePaymentRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLongServicePaymentSeverancePayment = ((LongServicePaymentSeverancePaymentDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EmpID {
                get {
                    return ((int)(this[this.tableLongServicePaymentSeverancePayment.EmpIDColumn]));
                }
                set {
                    this[this.tableLongServicePaymentSeverancePayment.EmpIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double LongServicePayment {
                get {
                    try {
                        return ((double)(this[this.tableLongServicePaymentSeverancePayment.LongServicePaymentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LongServicePayment\' in table \'LongServicePaymentSeverancePa" +
                                "yment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLongServicePaymentSeverancePayment.LongServicePaymentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double SeverancePayment {
                get {
                    try {
                        return ((double)(this[this.tableLongServicePaymentSeverancePayment.SeverancePaymentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SeverancePayment\' in table \'LongServicePaymentSeverancePaym" +
                                "ent\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLongServicePaymentSeverancePayment.SeverancePaymentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double EmployerContribution {
                get {
                    try {
                        return ((double)(this[this.tableLongServicePaymentSeverancePayment.EmployerContributionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmployerContribution\' in table \'LongServicePaymentSeverance" +
                                "Payment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLongServicePaymentSeverancePayment.EmployerContributionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public employeedetailRow employeedetailRow {
                get {
                    return ((employeedetailRow)(this.GetParentRow(this.Table.ParentRelations["employeedetail_LongServicePaymentSeverancePayment"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["employeedetail_LongServicePaymentSeverancePayment"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLongServicePaymentNull() {
                return this.IsNull(this.tableLongServicePaymentSeverancePayment.LongServicePaymentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLongServicePaymentNull() {
                this[this.tableLongServicePaymentSeverancePayment.LongServicePaymentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSeverancePaymentNull() {
                return this.IsNull(this.tableLongServicePaymentSeverancePayment.SeverancePaymentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSeverancePaymentNull() {
                this[this.tableLongServicePaymentSeverancePayment.SeverancePaymentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmployerContributionNull() {
                return this.IsNull(this.tableLongServicePaymentSeverancePayment.EmployerContributionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmployerContributionNull() {
                this[this.tableLongServicePaymentSeverancePayment.EmployerContributionColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class employeedetailRowChangeEvent : global::System.EventArgs {
            
            private employeedetailRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public employeedetailRowChangeEvent(employeedetailRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public employeedetailRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LongServicePaymentSeverancePaymentRowChangeEvent : global::System.EventArgs {
            
            private LongServicePaymentSeverancePaymentRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LongServicePaymentSeverancePaymentRowChangeEvent(LongServicePaymentSeverancePaymentRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LongServicePaymentSeverancePaymentRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591