using System;
using System.Data;
using System.Configuration;
using System.Collections;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Web.UI.HtmlControls;
using HROne.DataAccess;
//using perspectivemind.validation;
using HROne.Lib.Entities;
using HROne.Payroll;

public partial class Emp_FinalPayment_List : HROneWebControl
{
    private const string FUNCTION_CODE = "PER011";

    public int CurID = -1;

    protected SearchBinding sbinding;
    public DBManager sdb = EEmpFinalPayment.db;
    protected ListInfo info;
    protected DataView view;

    private bool IsAllowEdit = true;

    

    protected void Page_Load(object sender, EventArgs e)
    {
       
        if (!WebUtils.CheckPermission(Session, FUNCTION_CODE, WebUtils.AccessLevel.ReadWrite))
        {
            IsAllowEdit = false;
            AllowEditPanel.Visible = false;
            AllowEditPanel2.Visible = false;
        }
        PreRender += new EventHandler(Emp_FinalPayment_List_PreRender);


        sbinding = new SearchBinding(dbConn, sdb);
        sbinding.initValues("PayCodeID", null, EPaymentCode.VLPaymentCode, null);
        sbinding.initValues("EmpFinalPayMethod", null, Values.VLPaymentMethod, null);
        sbinding.initValues("EmpFinalPayIsRestDayPayment", null, Values.VLYesNo, null);

        sbinding.initValues("EmpFinalPayIsAutoGen", null, Values.VLYesNo, null);
        sbinding.initValues("CostCenterID", null, ECostCenter.VLCostCenter, null);
        sbinding.init(DecryptedRequest, null);

        HROne.Common.WebUtility.WebControlsLocalization(this.Session, this.Controls);

        if (!int.TryParse(DecryptedRequest["EmpID"], out CurID))
            CurID = -1;
        Delete.OnClientClick = HROne.Translation.PromptMessage.CreateDeleteConfirmDialogJavascript(Delete);

        Generate.OnClientClick = HROne.Translation.PromptMessage.CreateConfirmDialogJavascript(HROne.Common.WebUtility.GetLocalizedString("All final payment previously generated will be lost.\r\nStill Continue?"), Generate);
        EmpID.Value = CurID.ToString();
        CostCenterHeaderCell.Visible = WebUtils.productLicense(Session).IsCostCenter;

        info = ListFooter.ListInfo;
    }

    void Emp_FinalPayment_List_PreRender(object sender, EventArgs e)
    {
        if (view == null)
        {
            view = loadData(info, sdb, Repeater);
        }

        DBFilter autoGeneratedPayrollProcessFilter = new DBFilter();
        autoGeneratedPayrollProcessFilter.add(new Match("EmpID", CurID));
        autoGeneratedPayrollProcessFilter.add(new Match("EmpFinalPayIsAutoGen", true));
        autoGeneratedPayrollProcessFilter.add(new Match("PayRecID", ">", 0));
        if (EEmpFinalPayment.db.count(dbConn, autoGeneratedPayrollProcessFilter) > 0)
            PaymentMethodPanel.Visible = false;
        else
            PaymentMethodPanel.Visible = true;

    }

    public DataView loadData(ListInfo info, DBManager db, Repeater repeater)
    {
        DBFilter filter = new DBFilter();
        filter.add(new Match("EmpID", this.CurID));

        if (info != null && info.orderby != null && !info.orderby.Equals(""))
            filter.add(info.orderby, info.order);

        string select = "c.*, pc.PaymentCode";
        string from = "from [" + sdb.dbclass.tableName + "] c LEFT JOIN "+
            EPaymentCode.db.dbclass.tableName+" pc ON c.PayCodeID=pc.PaymentCodeID";

        DataTable table = WebUtils.GetDataTableFromSelectQueryWithFilter(dbConn, select, from, filter, info);

        view = new DataView(table);

        ListFooter.Refresh();

        if (repeater != null)
        {
            repeater.DataSource = view;
            repeater.DataBind();
        }

        return view;
    }

    protected void FirstPage_Click(object sender, EventArgs e)
    {
        view = loadData(info, sdb, Repeater);

    }
    protected void PrevPage_Click(object sender, EventArgs e)
    {
        view = loadData(info, sdb, Repeater);

    }
    protected void NextPage_Click(object sender, EventArgs e)
    {
        view = loadData(info, sdb, Repeater);

    }
    protected void LastPage_Click(object sender, EventArgs e)
    {
        view = loadData(info, sdb, Repeater);

    }
    protected void ChangeOrder_Click(object sender, EventArgs e)
    {
        LinkButton l = (LinkButton)sender;
        String id = l.ID.Substring(1);
        if (info.orderby == null)
            info.order = true;
        else if (info.orderby.Equals(id))
            info.order = !info.order;
        else
            info.order = true;
        info.orderby = id;

        view = loadData(info, sdb, Repeater);

    }
    protected void Repeater_ItemDataBound(object sender, RepeaterItemEventArgs e)
    {
        DataRowView row = (DataRowView)e.Item.DataItem;
        CheckBox cb = (CheckBox)e.Item.FindControl("ItemSelect");
        WebFormUtils.LoadKeys(sdb, row, cb);

        EEmpFinalPayment obj = new EEmpFinalPayment();
        sdb.toObject(((DataRowView)e.Item.DataItem).Row, obj);
        Hashtable values = new Hashtable();
        sdb.populate(obj, values);

        Binding eBinding = new Binding(dbConn, sdb);
        eBinding.add(new BlankZeroLabelVLBinder(sdb, (Label)e.Item.FindControl("CostCenterID"), ECostCenter.VLCostCenter).setTextDisplayForZero(HROne.Common.WebUtility.GetLocalizedString(ECostCenter.DEFAULT_COST_CENTER_TEXT)));

        eBinding.init(Request, Session);

        eBinding.toControl(values);

        if (obj.PayRecID != null)
            cb.Visible = false;
        else
            cb.Visible = IsAllowEdit;

        ((HtmlTableCell)e.Item.FindControl("CostCenterDetailCell")).Visible = WebUtils.productLicense(Session).IsCostCenter;
        ((HtmlTableCell)e.Item.FindControl("RemarkCell")).ColSpan = ((HtmlTableRow)e.Item.FindControl("detailRow")).Cells.Count - 1 - (WebUtils.productLicense(Session).IsCostCenter ? 0 : 1);

        HROne.Common.WebUtility.WebControlsLocalization(this.Session, e.Item.Controls);

    }

    protected void Delete_Click(object sender, EventArgs e)
    {
        ArrayList list = new ArrayList();
        foreach (RepeaterItem i in Repeater.Items)
        {
            CheckBox cb = (CheckBox)i.FindControl("ItemSelect");
            if (cb.Checked)
            {
                EEmpFinalPayment o = new EEmpFinalPayment();
                WebFormUtils.GetKeys(sdb, o, cb);
                list.Add(o);
            }

        }
        if (list.Count > 0)
        {
            WebUtils.StartFunction(Session, FUNCTION_CODE, CurID);
            foreach (BaseObject o in list)
            {
                if (sdb.select(dbConn, o))
                    sdb.delete(dbConn, o);
            }
            WebUtils.EndFunction(dbConn);
        }
        loadData(info, sdb, Repeater);
    }
    protected void Generate_Click(object sender, EventArgs e)
    {
        PageErrors errors = PageErrors.getErrors(sdb, Page.Master);
        FinalPaymentProcess finalPaymentProcess = new FinalPaymentProcess(dbConn, this.CurID, this.PaymentMethod.SelectedValue);
        WebUtils.StartFunction(Session, FUNCTION_CODE, CurID);
        try
        {
            finalPaymentProcess.UpdateAutoGeneratedFinalPayment();
        }
        catch(Exception ex)
        {
            errors.addError(ex.Message);
        }
        WebUtils.EndFunction(dbConn);
        loadData(info, sdb, Repeater);
    }
    protected void New_Click(object sender, EventArgs e)
    {
        HROne.Common.WebUtility.RedirectURLwithEncryptedQueryString(Response, Session, "Emp_FinalPayment_Edit.aspx?EmpID=" + EmpID.Value);
    }
}
